#! /usr/bin/env python

import rospy
from geometry_msgs.msg import PolygonStamped
from geometry_msgs.msg import Polygon
from geometry_msgs.msg import Point32
from std_msgs.msg import Header
import numpy as np


def talker():
    pub = rospy.Publisher('/afm/camera', PolygonStamped, queue_size=1)
    rospy.init_node('camera', anonymous=True)
    rate = rospy.Rate(30)  # 30hz
    counter = int(0)
    while not rospy.is_shutdown():
        points = [Point32(np.random.random(), np.random.random(), np.random.random()) for _ in range(4)]
        points.append(points[0])
        poly = Polygon(points)
        # rospy.loginfo(points)
        p = PolygonStamped(Header(counter, rospy.Time.now(), "0"), poly)
        pub.publish(p)
        counter += 1
        rate.sleep()


if __name__ == '__main__':
    try:
        talker()
    except rospy.ROSInterruptException:
        pass
